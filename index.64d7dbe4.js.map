{"mappings":"AAAe,SAAAA,IACX,MAAO,CACHC,aAAcC,SAASC,cAAc,iBACrCC,WAAYF,SAASC,cAAc,WACnCE,UAAWH,SAASC,cAAc,UAClCG,QAASJ,SAASC,cAAc,a,CCFxC,MAAMI,EAAOP,IAwCN,SAASQ,IACd,MAAMC,EAAM,wDAAwDF,EAAKN,aAAaS,QAEtF,OAAOC,MAAMF,EAAK,CAChBG,QAAS,CACP,YA3CJ,2EA8CGC,MAAKC,GACGA,EAASC,Q,CClDtB,MAAMC,EAAOhB,IAEN,SAASiB,EAAcC,GACxB,MAAMC,EAASD,EACdE,KAAI,EAACX,IAAEA,EAAGY,OAAEA,KACJ,iDACSZ,yBACLY,EAAO,GAAGC,+BACXD,EAAO,GAAGE,qCACVF,EAAO,GAAGG,uCAGrBC,KAAK,KAERC,QAAQC,IAAIR,GAEZH,EAAKV,QAAQsB,UAAYT,EACzBH,EAAKZ,WAAWyB,UAAUC,IAAI,Y,CCdlC,MAAMC,EAAO/B,IACb+B,EAAK1B,UAAUwB,UAAUC,IAAI,aAC7BC,EAAK3B,WAAWyB,UAAUC,IAAI,aAE9BE,OAAOC,iBAAiB,QAGxB,WACEF,EAAK3B,WAAWyB,UAAUK,OAAO,aACjCH,EAAK9B,aAAa4B,UAAUC,IAAI,aFQzBnB,MAHK,sCAGM,CAChBC,QAAS,CACP,YAnBJ,2EAsBGC,MAAKC,GACGA,EAASC,SEXjBF,MAAKsB,IAEJC,aAAeD,EAAKE,QAAOC,I,IAAOC,EAAA,OAAkB,OAAT,QAATA,EAAAD,EAAIE,aAAK,IAATD,OAAA,EAAAA,EAAW9B,IAAW,IAGxD,IAAK,IAAIgC,EAAI,EAAGA,EAAIL,aAAaM,OAAQD,IAAK,CAC5C,MAAME,EAAQP,aAAaK,GAE3B,IAAIG,EAAS1C,SAAS2C,cAAc,UAE/BF,EAAMH,QAGXI,EAAOlC,MAAQ,GAAGiC,EAAMG,KAExBF,EAAOhB,UAAY,GAAGe,EAAMrB,OAE5BS,EAAK9B,aAAa8C,YAAYH,G,KAGjCI,OAAM,SAAUC,GACfvB,QAAQC,IAAIsB,E,IAGhBlB,EAAK3B,WAAWyB,UAAUC,IAAI,aAC9BC,EAAK9B,aAAa4B,UAAUK,OAAO,Y,IAhCrCH,EAAK9B,aAAagC,iBAAiB,UAoCnC,WACEF,EAAK3B,WAAWyB,UAAUK,OAAO,aACjCH,EAAKzB,QAAQuB,UAAUC,IAAI,aAC3BC,EAAKzB,QAAQsB,UAAY,IAEzBpB,IACGK,MAAKsB,IACJlB,EAAckB,EAAK,IAEpBa,OAAM,SAAUC,GACfvB,QAAQC,IAAIsB,E","sources":["src/js/get-refs.js","src/js/cat-api.js","src/js/renderMarkup.js","src/index.js"],"sourcesContent":["export default function getRefs() {\n    return {\n        breedsSelect: document.querySelector('.breed-select'),\n        loaderInfo: document.querySelector('.loader'),\n        errorData: document.querySelector('.error'),\n        catInfo: document.querySelector('.cat-info'),\n    }\n}","import getRefs from \"./get-refs\";\n\n\nconst refs = getRefs(); \nconst api_key =\n  'live_JJWPSVYeymspnNURrwJNrEoFQ9xEFTfnXeyuAKVCVICBuPkGG95Ew7XOSCY83E6e';\n\n\n  // Коллекция пород\n// При загрузке страницы должен выполняться HTTP-запрос за коллекцией пород.\n// Для этого необходимо выполнить GET - запрос на ресурс https://api.thecatapi.com/v1/breeds,\n// возвращающий массив объектов. При успешном запросе, необходимо наполнить select.breed - select \n// опциями так, чтобы value опции содержал id породы, а в интерфейсе пользователю отображалось \n// название породы. \n// Напиши функцию fetchBreeds() которая делает HTTP-запрос и возвращает промис с массивом \n// пород - результатом запроса. Вынеси её в файл cat - api.js и сделай именованный экспорт. \n\nexport function fetchBreeds() {\n  \n  const url = `https://api.thecatapi.com/v1/breeds`;\n  let storedBreeds = [];\n\n  return fetch(url, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  })\n    .then(response => {\n      return response.json();       \n    });       \n  \n}\n\n// Информация о коте\n// Когда пользователь выбирает опцию в селекте, необходимо выполнять запрос за полной информацией\n// о коте на ресурс https://api.thecatapi.com/v1/images/search. Не забудь указать в этом запросе\n// параметр строки запроса breed_ids с идентификатором породы.\n// Напиши функцию fetchCatByBreed(breedId) которая ожидает идентификатор породы, делает HTTP-запрос\n// и возвращает промис с данными о коте - результатом запроса. Вынеси её в файл cat - api.js\n// и сделай именованный экспорт.\n// Если запрос был успешный, под селектом, в блоке div.cat-info появляется изображение и развернутая\n// информация о коте: название породы, описание и темперамент. \n\nexport function fetchCatByBreed() {   \n  const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${refs.breedsSelect.value}`;\n\n  return fetch(url, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  })\n    .then(response => {\n      return response.json();\n    });       \n}\n","import getRefs from \"./get-refs\";\n\nconst refs = getRefs();\n\nexport function rendersBreeds(arr) { \n      const markup = arr\n      .map(({ url, breeds }) => {\n        return `<div class=\"cat-info\">\n            <img src=\"${url}\">\n            <h2>\"${breeds[0].name}\"</h2>\n            <p>\"${breeds[0].description}\"</p>\n            <p>\"${breeds[0].temperament}\"</p>\n          </div>`;\n      })\n      .join(' '); \n    \n    console.log(markup);\n\n    refs.catInfo.innerHTML = markup;      \n    refs.loaderInfo.classList.add('is-hidden');      \n  }   ","import { fetchBreeds } from './js/cat-api';\nimport { fetchCatByBreed } from './js/cat-api';\nimport getRefs from './js/get-refs';\nimport { rendersBreeds } from './js/renderMarkup';\n\nconst refs = getRefs();\nrefs.errorData.classList.add('is-hidden'); \nrefs.loaderInfo.classList.add('is-hidden');\n\nwindow.addEventListener('load', onfetchBreeds);\nrefs.breedsSelect.addEventListener('change', onfetchCatByBreed);\n\nfunction onfetchBreeds() {\n  refs.loaderInfo.classList.remove('is-hidden');\n  refs.breedsSelect.classList.add('is-hidden');\n\n  fetchBreeds()\n    .then(data => {\n      //filter to only include those with an `image` object\n      storedBreeds = data.filter(img => img.image?.url != null);\n      // storedBreeds = data;\n\n      for (let i = 0; i < storedBreeds.length; i++) {\n        const breed = storedBreeds[i];\n\n        let option = document.createElement('option');\n        //skip any breeds that don't have an image\n        if (!breed.image) continue;\n        //use the current array index\n        //   option.value = i;\n        option.value = `${breed.id}`;\n        i;\n        option.innerHTML = `${breed.name}`;\n\n        refs.breedsSelect.appendChild(option);\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  \n  refs.loaderInfo.classList.add('is-hidden');\n  refs.breedsSelect.classList.remove('is-hidden');   \n}\n\n\nfunction onfetchCatByBreed() {\n  refs.loaderInfo.classList.remove('is-hidden');\n  refs.catInfo.classList.add('is-hidden');\n  refs.catInfo.innerHTML = ' ';\n\n  fetchCatByBreed()\n    .then(data => {\n      rendersBreeds(data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n   \n}  \n\n\n\n// const fetchBreedsSelect = document.querySelector('.breed-select');\n// catInfo = document.querySelector('.cat-info');\n\n// const url = `https://api.thecatapi.com/v1/breeds`;\n// const api_key = \"live_JJWPSVYeymspnNURrwJNrEoFQ9xEFTfnXeyuAKVCVICBuPkGG95Ew7XOSCY83E6e\"\n// let storedBreeds = []\n\n//  fetch(url,{headers: {\n//       'x-api-key': api_key\n//     }})\n//  .then((response) => {\n//    return response.json();\n//  })\n// .then((data) => {\n//    //filter to only include those with an `image` object\n//    data = data.filter(img=> img.image?.url!=null)\n\n//     storedBreeds = data;\n//     // console.log(storedBreeds);\n\n//    for (let i = 0; i < storedBreeds.length; i++) {\n//      const breed = storedBreeds[i];\n//     let option = document.createElement('option');\n//     //    console.log(breed);\n//     //    console.log(option);\n//      //skip any breeds that don't have an image\n//      if(!breed.image)continue\n\n//     //use the current array index\n//     option.value = i;\n//        option.innerHTML = `${breed.name}`;\n//     //    document.getElementById(\".breed-select\").appendChild(option);\n//       fetchBreedsSelect.appendChild(option);\n//   }\n//     // console.log(fetchBreedsSelect);\n//    //show the first breed by default\n//   //  showBreedImage(0)\n// })\n// .catch(function(error) {\n//    console.log(error);\n// });\n\n// ==============================================\n// ============================================================================\n// ====================================================================================\n\n// https://api.thecatapi.com/v1/images/search?breed_ids={breed.id}\n// image: {id: '0XYvRd7oD', width: 1204, height: 1445, url: 'https://cdn2.thecatapi.com/images/0XYvRd7oD.jpg'}\n// name: \"Abyssinian\"\n// description: \"The Abyssinian is easy to care for, and a joy to have in your home. They’re affectionate cats and love both people and other animals.\"\n// temperament: \"Active, Energetic, Independent, Intelligent, Gentle\"\n\n// function fetchCatByBreed() {\n\n//   // const url = `https://api.thecatapi.com/v1/images/search?breed_ids=aege`;\n//   // const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breed.id}`;\n//   const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${fetchBreedsSelect.value}`;\n\n//   // console.log(url);\n//   // const api_key = \"DEMO_API_KEY\"\n\n//   fetch(url, {\n//     headers: {\n//       'x-api-key': api_key,\n//     },\n//   })\n//     .then(response => {\n//       return response.json();\n//     })\n//     .then(data => { catInfo.innerHTML = fetchBreedsSelect1(data)})\n//     .catch(function (error) {\n//       console.log(error);\n//     });\n\n//   function fetchBreedsSelect1(data) {\n//     console.log(data);\n//     return data\n//       .map(({ url, breeds }) => {\n//         return `<div class=\"cat-info\">\n//             <img src=\"${url}\">\n//             <h2>\"${breeds[0].name}\"</h2>\n//             <p>\"${breeds[0].description}\"</p>\n//             <p>\"${breeds[0].temperament}\"</p>\n//           </div>`;\n//       })\n//       .join(' ');\n\n//   }\n// }\n\n// .then(data => {\n\n//   //  catInfo.innerHTML = imagesData\n//   // console.log(markup);\n//   markup = data\n//     .map(({ url, breeds }) => `<div class=\"cat-info\">\n//       <img src=\"${url}\">\n//       <h2>\"${breeds[0].name}\"</h2>\n//       <p>\"${breeds[0].description}\"</p>\n//       <p>\"${breeds[0].temperament}\"</p>\n//     </div>`\n//     )\n//     .join(' ');\n//   console.log(markup);\n//    catInfo.innerHTML = markup;\n// })\n// .catch(function (error) {\n//   console.log(error);\n// });\n\n// function createMarkup(arr) {\n//   const markup = arr.map(item => `<div class=\"cat-info\">\n//           <img src=\"${url}\">\n//           <h2>\"${breeds[0].name}\"</h2>\n//           <p>\"${imagesData.breeds[0].description}\"</p>\n//           <p>\"${imagesData.breeds[0].temperament}\"</p>\n//         </div>`).join(' ');\n//   catInfo.innerHTML = markup;\n// }\n\n// console.log(catInfo);\n// const url = `https://api.thecatapi.com/v1/images/search?breed_ids=aege`;\n// const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breed.id}`;\n// const api_key = \"DEMO_API_KEY\"\n\n//  fetch(url,{headers: {\n//       'x-api-key': api_key\n//     }})\n//  .then((response) => {\n//    return response.json();\n//  })\n// .then((data) => {\n//     let imagesData = data;\n//     console.log(imagesData);\n\n//     imagesData.map(function (imageData) {\n//       const { url, breeds } = imageData;\n\n//      console.log(imageData);\n//     let image = document.createElement('img');\n//     //use the url from the image object\n//         image.src = `${url}`;\n//         // image.width = 20px;\n//     console.log(image.src);\n\n//       let nameCat = document.createElement('h2');\n//       nameCat.textContent = `${breeds[0].name}`;\n//       let descriptionCat = document.createElement('p');\n//       descriptionCat.textContent = `${imageData.breeds[0].description}`;\n//       let temperamentCat = document.createElement('p');\n//       temperamentCat.textContent = `${imageData.breeds[0].temperament}`;\n\n//       console.log(nameCat);\n//       console.log(descriptionCat);\n//        console.log(temperamentCat);\n//       temperamentCat.classList.add(\"temp\");\n\n//       catInfo.append(image, nameCat, descriptionCat, temperamentCat);\n//     });\n// })\n// .catch(function(error) {\n//    console.log(error);\n// });\n"],"names":["$f973f0a89548de5e$export$2e2bcd8739ae039","breedsSelect","document","querySelector","loaderInfo","errorData","catInfo","$c4ebbd28ee7007ee$var$refs","$c4ebbd28ee7007ee$export$57b7d3a597416aa2","url","value","fetch","headers","then","response","json","$8fa1c37b43059e2f$var$refs","$8fa1c37b43059e2f$export$afb1f26687e8c90c","arr","markup","map","breeds","name","description","temperament","join","console","log","innerHTML","classList","add","$1f0dc3b9307be026$var$refs","window","addEventListener","remove","data","storedBreeds","filter","img","ref","image","i","length","breed","option","createElement","id","appendChild","catch","error"],"version":3,"file":"index.64d7dbe4.js.map"}